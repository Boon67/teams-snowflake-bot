# Microsoft Teams Bot Configuration
# Get these values from your Azure Bot Service registration
MICROSOFT_APP_ID=your_app_id_here
MICROSOFT_APP_PASSWORD=your_app_password_here
BOT_PORT=3978

# Snowflake Configuration
# Your Snowflake account details
SNOWFLAKE_ACCOUNT=your_account.region.snowflakecomputing.com
SNOWFLAKE_USERNAME=your_username
SNOWFLAKE_DATABASE=your_database
SNOWFLAKE_SCHEMA=your_schema
SNOWFLAKE_WAREHOUSE=your_warehouse
SNOWFLAKE_ROLE=your_role

# Authentication Methods (choose ONE method below)

# Method 1: Personal Access Token (PAT) - RECOMMENDED
# Generate PAT in Snowflake: Admin > Users & Roles > [Your User] > Authentication > Generate Token
# SNOWFLAKE_ACCESS_TOKEN=your_personal_access_token

# Method 2: Keypair Authentication - RECOMMENDED
# Path to your private key file (generate with: openssl genrsa 2048 | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8 -nocrypt)
# SNOWFLAKE_PRIVATE_KEY_PATH=/path/to/your/rsa_key.p8
# Or paste the private key directly (replace newlines with \n)
# SNOWFLAKE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----"
# SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=your_passphrase_if_encrypted

# Method 3: Username/Password (less secure, not recommended for production)
# SNOWFLAKE_PASSWORD=your_password

# Cortex Agents Configuration
# Cortex Agents provides advanced chat capabilities with multiple tools
# Uses cortex_analyst_text_to_sql, sql_exec, and data_to_chart tools
# Works directly with database schema (no semantic models needed)
# Ensure your user has the SNOWFLAKE.CORTEX_USER role granted

# Option 1: Use a predefined agent (recommended)
# CORTEX_AGENTS_AGENT_NAME=my_data_analyst_agent

# Option 2: Manual tool specification (fallback)
# If no agent name is provided, will use manual tool specification

# Cortex Agents Model Configuration
CORTEX_AGENTS_MODEL=llama3.3-70b

# API timeout in seconds (default: 60)
CORTEX_AGENTS_TIMEOUT=60

# Logging Configuration
# Set logging level: error, warn, info, verbose, debug
LOG_LEVEL=info

# Verbose SSE Delta Logging (for debugging)
# Set to 'true' to see every delta event and text chunk
# Set to 'false' for cleaner logs (recommended for production)
VERBOSE_DELTA_LOGGING=false

# Show Delta Streaming Messages in Terminal
# Set to 'true' to see real-time delta processing as it happens
# Set to 'false' to hide delta streaming for cleaner output
SHOW_DELTA_MESSAGES=true

# Debug Mode for Real-time Delta Printing
# Set to 'true' to print each delta chunk immediately as it arrives
# This provides the most detailed real-time debugging of SSE streams
DEBUG_DELTAS=false

# Alternative: General Debug Mode
# Set to 'true' to enable all debug features including delta printing
DEBUG=false

# Rate Limiting
# Maximum requests per minute per user (optional)
MAX_REQUESTS_PER_MINUTE=10

# Additional Configuration (optional)
NODE_ENV=development

# Agent Thinking/Reasoning Display
# Set to 'true' to include agent thinking process in responses (debug mode)
# Set to 'false' to hide thinking content (production mode)
INCLUDE_AGENT_THINKING=false